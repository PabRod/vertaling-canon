from snakemake.io import *

# Identify the files to be converted
ids = glob_wildcards('{id}.docx')
word_files = expand('{id}.docx', id=ids.id)
md_files = expand('md/{id}.md', id=ids.id)
odt_files = expand('odt/{id}.odt', id=ids.id)

# Auxiliary functions
def handle_whitespace(string):
    """Make whitespaces understandable by the console"""
    return string.replace(' ', '\ ')

def convert(source, output):
    """Convert a word file to a markdown file."""
    cmd = 'pandoc -s {source} -o {output}'.format(source=handle_whitespace(source),
                                                  output=handle_whitespace(output))
    os.system(cmd)

def fix_header(md_file):
    """Removes the unneccessary anchors of the markdown file."""
    # s/PATTERN/REPLACEMENT/g
    cmd = "sed -i 's/\[\].* .anchor\}}//g' {file}".format(file=handle_whitespace(md_file))
    os.system(cmd)

rule process:
    input:
        word_files
    output:
        md_files
    run:
        for (word_file, md_file) in zip(word_files, md_files):
            convert(word_file, md_file)

rule fix_header:
    input:
        md_files
    run:
        for file in md_files:
            fix_header(file)

rule uniformize:
    input:
        md_files
    output:
        odt_files
    run:
        for (md_file, odt_file) in zip(md_files, odt_files):
            convert(md_file, odt_file)

rule clean:
    run:
        for file in md_files + odt_files:
            cmd = 'rm {file} 2> /dev/null'.format(file=handle_whitespace(file))
            os.system(cmd)

